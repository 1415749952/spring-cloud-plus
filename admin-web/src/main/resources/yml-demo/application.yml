server:
  port: 8088
# jasypt加密密钥
jasypt:
  encryptor:
    password: xxx

# 日志
logging:
  file:
    path: ./logs
  level:
    root: info
  operate:
    all: false
    # 操作记录日志过期天数，默认30
    expire:
      days: 30

# spring配置
spring:
  profiles:
    active: '@profiles.active@'
  application:
    name: xxx
  # 数据库配置
  datasource:
    dynamic:
      primary: master #设置默认的数据源或者数据源组,默认值即为master
      datasource:
        master:
          url: jdbc:p6spy:mysql://xxx:3306/admin?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false&nullCatalogMeansCurrent=true&serverTimezone=GMT%2B8
          driver-class-name: com.p6spy.engine.spy.P6SpyDriver
          username: root
          password: ENC(4M6RKeFuZ7OngpmunjkMm/a+W8eCJrsF)
          # 不加这个会报错(testWhileIdle is true, validationQuery not set)
          validation-query: ${spring.datasource.dynamic.druid.validation-query}
        slave:
          url: jdbc:p6spy:mysql://xxx:3306/admin?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false&nullCatalogMeansCurrent=true&serverTimezone=GMT%2B8
          driver-class-name: com.p6spy.engine.spy.P6SpyDriver
          username: root
          password: ENC(4M6RKeFuZ7OngpmunjkMm/a+W8eCJrsF)
          validation-query: ${spring.datasource.dynamic.druid.validation-query}
        activiti:
          url: jdbc:mysql://xxx:3306/activiti?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false&nullCatalogMeansCurrent=true&serverTimezone=GMT%2B8
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: root
          password: ENC(4M6RKeFuZ7OngpmunjkMm/a+W8eCJrsF)
          validation-query: ${spring.datasource.dynamic.druid.validation-query}
        quartz:
          url: jdbc:mysql://xxx:3306/quartz?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false&nullCatalogMeansCurrent=true&serverTimezone=GMT%2B8
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: root
          password: ENC(4M6RKeFuZ7OngpmunjkMm/a+W8eCJrsF)
          validation-query: ${spring.datasource.dynamic.druid.validation-query}
  # redis
  redis:
    cluster:
      nodes:
        - redis://xxx:7000
        - redis://xxx:7001
        - redis://xxx:7002
        - redis://xxx:7003
        - redis://xxx:7004
        - redis://xxx:7005
      max-redirects: 3  # 获取失败 最大重定向次数
      scan-interval: 5000
    timeout: 6000  # 连接超时时长（毫秒）

  # 缓存
  cache:
    redis:
      time-to-live: 20s

  # activemq
  activemq:
    broker-url: tcp://xxx:61616
    user: admin
    password: admin
    pool:
      enabled: true
      max-connections: 100
    packages:
      trust-all: true #注意 对象传输需开启包白名单 否则会报错- -
    in-memory: true
    queue-name: gourd-queue
    topic-name: gourd-topic
  jms:
    pub-sub-domain: true

  cloud:
    # 短信
    alicloud:
      access-key: xxx
      secret-key: xxx
      sms:
    #        report-queue-name: Alicom-Queue-********-SmsReport
    #        up-queue-name: Alicom-Queue-********-SmsUp

  # ES搜索引擎
  data:
    elasticsearch:
      # 注意端口为9300  9300 是 Java 客户端的端口,支持集群之间的通信。9200 是支持 Restful HTTP 的接口
      cluster-nodes: xxx:9300
      # es的cluster集群名称可以查看服务器安装的集群名称 curl http://192.168.92.130:9200 获取到集群名称
      cluster-name: docker-cluster
      repositories:
        enabled: true

# OpenOffice-配置
openOffice:
  ip: xxx
  port: 6080
  windowsFileTempLoc: C:\Users\Administrator\Desktop\
  linuxFileTempLoc: /usr/gourd/tmp/

# 分布式文件系统fastDfs配置
fdfs:
  # socket连接超时时长
  soTimeout: 1500
  # 连接tracker服务器超时时长
  connectTimeout: 600
  pool:
    # 从池中借出的对象的最大数目
    max-total: 200
    max-total-per-key: 50
    # 获取连接时的最大等待毫秒数100
    max-wait-millis: 5000
  # 缩略图生成参数，可选
  thumb-image:
    width: 150
    height: 150
  # 跟踪服务器tracker_server请求地址,支持多个
  trackerList:
    - xxx:22122
  #
  # 存储服务器storage_server访问地址
  web-server-url: http://xxx/

# seata 分布式事务
seata:
  enabled: true
  enableAutoDataSourceProxy: true
  tx-service-group: admin
  service:
    disable-global-transaction: false
    grouplist:
      # seata seaver的 地址配置，此处可以集群配置是个数组
      default: xxx:8091
    vgroup-mapping:
      # key一定要与tx-service-group一致
      admin: default
  registry:
    type: nacos
    nacos:
      server-addr: xxx:8848
      cluster: default

# 定时任务执行ip地址
schedule:
  task:
    run-host: 127.0.0.1

# 测试
test:
  nacos:
    value: 测试热更新








